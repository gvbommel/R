{
    "type": [
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        3,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2
    ],
    "data": [
        "> ",
        "yearforecasts <- HoltWinters(year)",
        "Error in decompose(ts(x[1L:wind], start = start(x), frequency = f), seasonal) : \n  time series has no or less than 2 periods\n",
        "> ",
        "df <- data.frame(year=1:14, perc= year)",
        "> ",
        "library(ggplot2)",
        "> ",
        "ggplot(df, aes(x=year, y=perc)) + ",
        "+ ",
        "  geom_point() + ",
        "+ ",
        "  geom_smooth(method=\"lm\", fullrange=T) + ",
        "+ ",
        "  xlim(1,6)",
        "`geom_smooth()` using formula 'y ~ x'\n",
        "Warning messages:\n",
        "1: Removed 8 rows containing non-finite values (stat_smooth). \n",
        "2: Removed 8 rows containing missing values (geom_point). \n",
        "> ",
        "ggplot(df, aes(x=year, y=perc)) + ",
        "+ ",
        "  geom_point() + ",
        "+ ",
        "  geom_smooth(method=\"lm\", fullrange=T) + ",
        "+ ",
        "  xlim(1,16)",
        "`geom_smooth()` using formula 'y ~ x'\n",
        "> ",
        "ggplot(df, aes(x=year, y=perc)) + ",
        "+ ",
        "  geom_point() + ",
        "+ ",
        "  geom_smooth(method=\"lm\", fullrange=T) + ",
        "+ ",
        "  xlim(2008,2023)",
        "`geom_smooth()` using formula 'y ~ x'\n",
        "Warning messages:\n",
        "1: Removed 14 rows containing non-finite values (stat_smooth). \n",
        "2: Removed 14 rows containing missing values (geom_point). \n",
        "> ",
        "df <- data.frame(year=2008:2021, perc= year)",
        "> ",
        "ggplot(df, aes(x=year, y=perc)) + ",
        "+ ",
        "  geom_point() + ",
        "+ ",
        "  geom_smooth(method=\"lm\", fullrange=T) + ",
        "+ ",
        "  xlim(2008,2023)",
        "`geom_smooth()` using formula 'y ~ x'\n",
        "> ",
        "ggplot(df, aes(x=year, y=perc)) + ",
        "+ ",
        "  geom_point() + ",
        "+ ",
        "  geom_smooth(method=\"lm\", fullrange=T) + ",
        "+ ",
        "  xlim(2008,2024)",
        "`geom_smooth()` using formula 'y ~ x'\n",
        "> ",
        "View(df)",
        "> ",
        "View(df)",
        "> ",
        "cor(df$year,df$perc)",
        "[1] 0.9670095\n",
        "> ",
        "plot <- ggplot(df, aes(x=year, y=perc)) + ",
        "+ ",
        "  geom_point() + ",
        "+ ",
        "  geom_smooth(method=\"lm\", fullrange=T) + ",
        "+ ",
        "  xlim(2008,2024)",
        "> ",
        "summary(plot)",
        "data: year, perc [14x2]\nmapping:  x = ~year, y = ~perc\nscales:   x, xmin, xmax, xend, xintercept, xmin_final, xmax_final, xlower, xmiddle, xupper, x0 \nfaceting: <ggproto object: Class FacetNull, Facet, gg>\n    compute_layout: function\n    draw_back: function\n    draw_front: function\n    draw_labels: function\n    draw_panels: function\n    finish_data: function\n    init_scales: function\n    map_data: function\n    params: list\n    setup_data: function\n    setup_params: function\n    shrink: TRUE\n    train_scales: function\n    vars: function\n    super:  <ggproto object: Class FacetNull, Facet, gg>",
        "\n-----------------------------------\ngeom_point: na.rm = FALSE\nstat_identity: na.rm = FALSE\nposition_identity \n\ngeom_smooth: na.rm = FALSE, orientation = NA, se = TRUE\nstat_smooth: na.rm = FALSE, orientation = NA, se = TRUE, fullrange = TRUE, method = lm\nposition_identity \n\n",
        "> ",
        "df <- data.frame(",
        "+ ",
        "  X = 2010:2022,",
        "+ ",
        "  Y = c(11539282, 11543332, 11546969, 11567845, 11593741, 11606027, 11622554, 11658609, rep(NA, 5))",
        "+ ",
        "df <- data.frame(",
        "Error: unexpected symbol in:\n\"  Y = c(11539282, 11543332, 11546969, 11567845, 11593741, 11606027, 11622554, 11658609, rep(NA, 5))\ndf\"\n",
        "> ",
        "  X = 2010:2022,",
        "Error: unexpected ',' in \"  X = 2010:2022,\"\n",
        "> ",
        "  Y = c(11539282, 11543332, 11546969, 11567845, 11593741, 11606027, 11622554, 11658609, rep(NA, 5))",
        "> ",
        ")",
        "Error: unexpected ')' in \")\"\n",
        "> ",
        "df <- data.frame(",
        "+ ",
        "  X = (2010:2022),",
        "+ ",
        "  Y = c(11539282, 11543332, 11546969, 11567845, 11593741, 11606027, 11622554, 11658609, rep(NA, 5))",
        "+ ",
        ")",
        "> ",
        "View(df)",
        "> ",
        "df",
        "      X        Y\n1  2010 11539282\n2  2011 11543332\n3  2012 11546969\n4  2013 11567845\n5  2014 11593741\n6  2015 11606027\n7  2016 11622554\n8  2017 11658609\n9  2018       NA\n10 2019       NA\n11 2020       NA\n12 2021       NA\n13 2022       NA\n",
        "> ",
        "model.1 <- lm(formula = Y ~ X, data = df)",
        "> ",
        "summary(model.1)",
        "\nCall:\nlm(formula = Y ~ X, data = df)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-12210  -5803  -1988   4433  14257 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -22799769    3272284  -6.968 0.000434 ***\nX               17077       1625  10.508 4.36e-05 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 10530 on 6 degrees of freedom\n  (5 observations deleted due to missingness)\nMultiple R-squared:  0.9485",
        ",\tAdjusted R-squared:  0.9399 \nF-statistic: 110.4 on 1 and 6 DF,  p-value: 4.364e-05\n\n",
        "> ",
        "# broom is an extremely useful package for handling models in R",
        "> ",
        "# install.packages(\"broom\")",
        "> ",
        "install.packages(\"broom\")",
        "trying URL 'https://cran.rstudio.com/bin/macosx/contrib/4.1/broom_0.8.0.tgz'\n",
        "Content type 'application/x-gzip'",
        " length 1840859 bytes (1.8 MB)\n",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "\n",
        "downloaded 1.8 MB\n\n",
        "\nThe downloaded binary packages are in\n\t/var/folders/kg/bxr9djyj6_bdc4d3p7nm2h300000gn/T//Rtmphv6Kje/downloaded_packages\n",
        "> ",
        "broom::tidy(model.1, conf.int = T)",
        "\u001B[38;5;246m# A tibble: 2 × 7\u001B[39m\n  term          estimate std.error statistic   p.value   conf.low  conf.high\n  \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m            \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m      \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m      \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m\n\u001B[38;5;250m1\u001B[39m (Intercept) -\u001B[31m22\u001B[4m7\u001B[24m\u001B[39m\u001B[31m\u001B[4m9\u001B[24m\u001B[4m9\u001B[24m769\u001B[39m\u001B[31m.\u001B[39m  3\u001B[4m2\u001B[24m\u001B[4m7\u001B[24m\u001B[4m2\u001B[24m284.     -\u001B[31m6\u001B[39m\u001B[31m.\u001B[39m\u001B[31m97\u001B[39m 0.000\u001B[4m4\u001B[24m\u001B[4m3\u001B[24m\u001B[4m4\u001B[24m  -\u001B[31m30\u001B[4m8\u001B[24m\u001B[39m\u001B[31m\u001B[4m0\u001B[24m\u001B[4m6\u001B[24m759\u001B[39m\u001B[31m.\u001B[39m -\u001B[31m14\u001B[4m7\u001B[24m\u001B[39m\u001B[31m\u001B[4m9\u001B[24m\u001B[4m2\u001B[24m778\u001B[39m\u001B[31m.\u001B[39m\n",
        "\u001B[38;5;250m2\u001B[39m X               \u001B[4m1\u001B[24m\u001B[4m7\u001B[24m077.     \u001B[4m1\u001B[24m625.     10.5  0.000\u001B[4m0\u001B[24m\u001B[4m4\u001B[24m\u001B[4m3\u001B[24m6     \u001B[4m1\u001B[24m\u001B[4m3\u001B[24m100.     \u001B[4m2\u001B[24m\u001B[4m1\u001B[24m054.\n",
        "> ",
        "- 22799768.60 + 17077.01 * 2018:2022",
        "[1] 11661638 11678715 11695792 11712869 11729946\n",
        "> ",
        "predict(object = model.1, newdata = subset(df, X >= 2018))",
        "       9       10       11       12       13 \n11661641 11678718 11695795 11712872 11729949 \n",
        "> ",
        "df <- data.frame(",
        "+ ",
        "  X = (2008:2024),",
        "+ ",
        "  Y = c(56, 63, 67, 69, 65, 69, 71, 71, 74, 79, 80, 81, 87, 89, rep(NA, 5))",
        "+ ",
        ")",
        "Error in data.frame(X = (2008:2024), Y = c(56, 63, 67, 69, 65, 69, 71,  : \n  arguments imply differing number of rows: 17, 19\n",
        "> ",
        "df <- data.frame(",
        "+ ",
        "  X = (2008:2024),",
        "+ ",
        "  Y = c(56, 63, 67, 69, 65, 69, 71, 71, 74, 79, 80, 81, 87, 89, rep(NA, 5))",
        "+ ",
        "df <- data.frame(",
        "Error: unexpected symbol in:\n\"  Y = c(56, 63, 67, 69, 65, 69, 71, 71, 74, 79, 80, 81, 87, 89, rep(NA, 5))\ndf\"\n",
        "> ",
        "  X = (2008:2024),",
        "Error: unexpected ',' in \"  X = (2008:2024),\"\n",
        "> ",
        "  Y = c(56, 63, 67, 69, 65, 69, 71, 71, 74, 79, 80, 81, 87, 89, rep(NA, 5))",
        "> ",
        ")",
        "Error: unexpected ')' in \")\"\n",
        "> ",
        "df",
        "function (x, df1, df2, ncp, log = FALSE) \n{\n    if (missing(ncp)) \n        .Call(C_df, x, df1, df2, log)\n    else .Call(C_dnf, x, df1, df2, ncp, log)\n}\n<bytecode: 0x7fcfc9f4eee8>\n<environment: namespace:stats>\n",
        "> ",
        "df <- data.frame(",
        "+ ",
        "  X = (2008:2024),",
        "+ ",
        "  Y = c(56, 63, 67, 69, 65, 69, 71, 71, 74, 79, 80, 81, 87, 89, rep(NA, 5))",
        "+ ",
        ")",
        "Error in data.frame(X = (2008:2024), Y = c(56, 63, 67, 69, 65, 69, 71,  : \n  arguments imply differing number of rows: 17, 19\n",
        "> ",
        "df <- data.frame(",
        "+ ",
        "  X = (2008:2024),",
        "+ ",
        "  Y = c(56, 63, 67, 69, 65, 69, 71, 71, 74, 79, 80, 81, 87, 89, rep(NA, 3))",
        "+ ",
        ")",
        "> ",
        "df",
        "      X  Y\n1  2008 56\n2  2009 63\n3  2010 67\n4  2011 69\n5  2012 65\n6  2013 69\n7  2014 71\n8  2015 71\n9  2016 74\n10 2017 79\n11 2018 80\n12 2019 81\n13 2020 87\n14 2021 89\n15 2022 NA\n16 2023 NA\n17 2024 NA\n",
        "> ",
        "model.1 <- lm(formula = Y ~ X, data = df)",
        "> ",
        "summary(model.1)",
        "\nCall:\nlm(formula = Y ~ X, data = df)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.0066 -2.0297 -0.5846  2.0253  3.7736 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -4270.422    330.295  -12.93 2.10e-08 ***\nX               2.156      0.164   13.15 1.73e-08 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 2.473 on 12 degrees of freedom\n  (3 observations deleted due to missingness)\nMultiple R-squared: ",
        " 0.9351,\tAdjusted R-squared:  0.9297 \nF-statistic: 172.9 on 1 and 12 DF,  p-value: 1.734e-08\n\n",
        "> ",
        "broom::tidy(model.1, conf.int = T)",
        "\u001B[38;5;246m# A tibble: 2 × 7\u001B[39m\n  term        estimate std.error statistic      p.value conf.low conf.high\n  \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m          \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m        \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m    \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m\n\u001B[38;5;250m1\u001B[39m (Intercept) -\u001B[31m\u001B[4m4\u001B[24m27\u001B[39m\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m     330.        -\u001B[31m12\u001B[39m\u001B[31m.\u001B[39m\u001B[31m9\u001B[39m 0.000\u001B[4m0\u001B[24m\u001B[4m0\u001B[24m\u001B[4m0\u001B[24m021\u001B[4m0\u001B[24m -\u001B[31m\u001B[4m4\u001B[24m99\u001B[39m\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m    -\u001B[31m\u001B[4m3\u001B[24m55\u001B[39m\u001B[31m1\u001B[39m\u001B[31m.\u001B[39m  \n",
        "\u001B[38;5;250m2\u001B[39m X               2.16     0.164      13.1 0.000\u001B[4m0\u001B[24m\u001B[4m0\u001B[24m\u001B[4m0\u001B[24m017\u001B[4m3\u001B[24m     1.80      2.51\n",
        "> ",
        "predict(object = model.1, newdata = subset(df, X >= 2022))",
        "      15       16       17 \n89.09890 91.25495 93.41099 \n",
        "> ",
        "View(df)",
        "> ",
        "prediction <- predict(object = model.1, newdata = subset(df, X >= 2022))",
        "> ",
        "View(model.1)",
        "> ",
        "prediction NL <- predict(object = model.1, newdata = subset(df, X >= 2022))",
        "Error: unexpected symbol in \"prediction NL\"\n",
        "> ",
        "prediction_nl <- predict(object = model.1, newdata = subset(df, X >= 2022))",
        "> ",
        "df2 <- data.frame(",
        "+ ",
        "  X = (2008:2024),",
        "+ ",
        "  Y = c(37, 41, 42, 44, 48, 54, 53, 58, 58, 62, 60, 62, 66, 63, rep(NA, 3))",
        "+ ",
        ")",
        "> ",
        "model.1 <- lm(formula = Y ~ X, data = df2)",
        "> ",
        "prediction_au <- predict(object = model.1, newdata = subset(df, X >= 2022))",
        "> ",
        "df <- data.frame(",
        "+ ",
        "  X = (2012:2024),",
        "+ ",
        "  Y = c(48, 54, 53, 58, 58, 62, 60, 62, 66, 63, rep(NA, 3))",
        "+ ",
        ")",
        "> ",
        "model.1 <- lm(formula = Y ~ X, data = df)",
        "> ",
        "prediction_au <- predict(object = model.1, newdata = subset(df, X >= 2022))",
        "> ",
        "df <- data.frame(",
        "+ ",
        "  X = (2012:2024),",
        "+ ",
        "  Y = c(65, 69, 71, 71, 74, 79, 80, 81, 87, 89, rep(NA, 3))",
        "+ ",
        ")",
        "> ",
        "model.1 <- lm(formula = Y ~ X, data = df)",
        "> ",
        "prediction_nl <- predict(object = model.1, newdata = subset(df, X >= 2022))",
        "> ",
        "df <- data.frame(",
        "+ ",
        "  X = (2008:2024),",
        "+ ",
        "  Y = c(56, 63, 67, 69, 65, 69, 71, 71, 74, 79, 80, 81, 87, 89, rep(NA, 3))",
        "+ ",
        ")",
        "> ",
        "model.1 <- lm(formula = Y ~ X, data = df)",
        "> ",
        "broom::tidy(model.1, conf.int = T)",
        "\u001B[38;5;246m# A tibble: 2 × 7\u001B[39m\n  term        estimate std.error statistic      p.value conf.low conf.high\n  \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m          \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m        \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m    \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m\n\u001B[38;5;250m1\u001B[39m (Intercept) -\u001B[31m\u001B[4m4\u001B[24m27\u001B[39m\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m     330.        -\u001B[31m12\u001B[39m\u001B[31m.\u001B[39m\u001B[31m9\u001B[39m 0.000\u001B[4m0\u001B[24m\u001B[4m0\u001B[24m\u001B[4m0\u001B[24m021\u001B[4m0\u001B[24m -\u001B[31m\u001B[4m4\u001B[24m99\u001B[39m\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m    -\u001B[31m\u001B[4m3\u001B[24m55\u001B[39m\u001B[31m1\u001B[39m\u001B[31m.\u001B[39m  \n",
        "\u001B[38;5;250m2\u001B[39m X               2.16     0.164      13.1 0.000\u001B[4m0\u001B[24m\u001B[4m0\u001B[24m\u001B[4m0\u001B[24m017\u001B[4m3\u001B[24m     1.80      2.51\n",
        "> ",
        "predict(object = model.1, newdata = df)",
        "       1        2        3        4        5        6        7        8        9       10       11       12       13       14       15       16       17 \n58.91429 61.07033 63.22637 65.38242 67.53846 69.69451 71.85055 74.00659 76.16264 78.31868 80.47473 82.63077 84.78681 86.94286 89.09890 91.25495 93.41099 \n",
        "> ",
        "nl_waar <- c(56, 63, 67, 69, 65, 69, 71, 71, 74, 79, 80, 81, 87, 89)",
        "> ",
        "nl_geschat <- c(58, 61, 63, 65, 67, 70, 72, 74, 76, 78, 80, 83, 85, 87)",
        "> ",
        "cor(nl_geschat, nl_waar)",
        "[1] 0.9679677\n",
        "> ",
        "nl_waar <- c(56, 63, 67, 69, 65, 69, 71, 71, 74, 79, 80, 81, 87, 89, 89, 91, 93)",
        "> ",
        "nl_geschat <- c(58, 61, 63, 65, 67, 70, 72, 74, 76, 78, 80, 83, 85, 87, 89, 91, 93)",
        "> ",
        "cor(nl_geschat, nl_waar)",
        "[1] 0.9814918\n",
        "> ",
        "nl_waar <- c(56, 63, 67, 69, 65, 69, 71, 71, 74, 79, 80, 81, 87, 89)",
        "> ",
        "nl_geschat <- c(58, 61, 63, 65, 67, 70, 72, 74, 76, 78, 80, 83, 85, 87)",
        "> ",
        "cor(nl_geschat, nl_waar)",
        "[1] 0.9679677\n",
        "> ",
        "df <- data.frame(",
        "+ ",
        "  X = (2008:2024),",
        "+ ",
        "  Y = c(37, 41, 42, 44, 48, 54, 53, 58, 58, 62, 60, 62, 66, 63, rep(NA, 3))",
        "+ ",
        ")",
        "> ",
        "model.1 <- lm(formula = Y ~ X, data = df)",
        "> ",
        "broom::tidy(model.1, conf.int = T)",
        "\u001B[38;5;246m# A tibble: 2 × 7\u001B[39m\n  term        estimate std.error statistic      p.value conf.low conf.high\n  \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m          \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m        \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m    \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m\n\u001B[38;5;250m1\u001B[39m (Intercept) -\u001B[31m\u001B[4m4\u001B[24m33\u001B[39m\u001B[31m9\u001B[39m\u001B[31m.\u001B[39m     332.        -\u001B[31m13\u001B[39m\u001B[31m.\u001B[39m\u001B[31m1\u001B[39m 0.000\u001B[4m0\u001B[24m\u001B[4m0\u001B[24m\u001B[4m0\u001B[24m018\u001B[4m4\u001B[24m -\u001B[31m\u001B[4m5\u001B[24m06\u001B[39m\u001B[31m1\u001B[39m\u001B[31m.\u001B[39m    -\u001B[31m\u001B[4m3\u001B[24m61\u001B[39m\u001B[31m6\u001B[39m\u001B[31m.\u001B[39m  \n",
        "\u001B[38;5;250m2\u001B[39m X               2.18     0.165      13.2 0.000\u001B[4m0\u001B[24m\u001B[4m0\u001B[24m\u001B[4m0\u001B[24m016\u001B[4m1\u001B[24m     1.82      2.54\n",
        "> ",
        "predict(object = model.1, newdata = df)",
        "       1        2        3        4        5        6        7        8        9       10       11       12       13       14       15       16       17 \n39.25714 41.43736 43.61758 45.79780 47.97802 50.15824 52.33846 54.51868 56.69890 58.87912 61.05934 63.23956 65.41978 67.60000 69.78022 71.96044 74.14066 \n",
        "> ",
        "au_waar <- c(37, 41, 42, 44, 48, 54, 53, 58, 58, 62, 60, 62, 66, 63)",
        "> ",
        "au_geschat <- c(39, 41, 44, 46, 48, 50, 52, 55, 57, 59, 61, 63, 65, 67)",
        "> ",
        "cor(au_geschat, au_waar)",
        "[1] 0.9706723\n",
        "> ",
        "au_geschat <- c(39, 41, 44, 46, 48, 50, 52, 55, 57, 59, 61, 63, 65, 67, 70, 72, 74)",
        "> ",
        "cor(au_geschat, au_waar)",
        "Error in cor(au_geschat, au_waar) : incompatible dimensions\n",
        "> ",
        "au_geschat <- c(39, 41, 44, 46, 48, 50, 52, 55, 57, 59, 61, 63, 65, 67)",
        "> ",
        "cor(au_geschat, au_waar)",
        "[1] 0.9706723\n",
        "> ",
        "df <- data.frame(",
        "+ ",
        "  X = (2008:2024),",
        "+ ",
        "  Y = c(56, 63, 67, 69, 65, 69, 71, 71, 74, 79, 80, 81, 87, 89, rep(NA, 3))",
        "+ ",
        ")",
        "> ",
        "model.1 <- lm(formula = Y ~ X, data = df)",
        "> ",
        "broom::tidy(model.1, conf.int = T)",
        "\u001B[38;5;246m# A tibble: 2 × 7\u001B[39m\n  term        estimate std.error statistic      p.value conf.low conf.high\n  \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m          \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m        \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m    \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m\n\u001B[38;5;250m1\u001B[39m (Intercept) -\u001B[31m\u001B[4m4\u001B[24m27\u001B[39m\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m     330.        -\u001B[31m12\u001B[39m\u001B[31m.\u001B[39m\u001B[31m9\u001B[39m 0.000\u001B[4m0\u001B[24m\u001B[4m0\u001B[24m\u001B[4m0\u001B[24m021\u001B[4m0\u001B[24m -\u001B[31m\u001B[4m4\u001B[24m99\u001B[39m\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m    -\u001B[31m\u001B[4m3\u001B[24m55\u001B[39m\u001B[31m1\u001B[39m\u001B[31m.\u001B[39m  \n",
        "\u001B[38;5;250m2\u001B[39m X               2.16     0.164      13.1 0.000\u001B[4m0\u001B[24m\u001B[4m0\u001B[24m\u001B[4m0\u001B[24m017\u001B[4m3\u001B[24m     1.80      2.51\n",
        "> ",
        "prediction_nl <- predict(object = model.1, newdata = subset(df, X >= 2022))",
        "> ",
        "df <- data.frame(",
        "+ ",
        "  X = (2008:2024),",
        "+ ",
        "  Y = c(37, 41, 42, 44, 48, 54, 53, 58, 58, 62, 60, 62, 66, 63, rep(NA, 3))",
        "+ ",
        ")",
        "> ",
        "model.1 <- lm(formula = Y ~ X, data = df)",
        "> ",
        "broom::tidy(model.1, conf.int = T)",
        "\u001B[38;5;246m# A tibble: 2 × 7\u001B[39m\n  term        estimate std.error statistic      p.value conf.low conf.high\n  \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m          \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m        \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m    \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m\n\u001B[38;5;250m1\u001B[39m (Intercept) -\u001B[31m\u001B[4m4\u001B[24m33\u001B[39m\u001B[31m9\u001B[39m\u001B[31m.\u001B[39m     332.        -\u001B[31m13\u001B[39m\u001B[31m.\u001B[39m\u001B[31m1\u001B[39m 0.000\u001B[4m0\u001B[24m\u001B[4m0\u001B[24m\u001B[4m0\u001B[24m018\u001B[4m4\u001B[24m -\u001B[31m\u001B[4m5\u001B[24m06\u001B[39m\u001B[31m1\u001B[39m\u001B[31m.\u001B[39m    -\u001B[31m\u001B[4m3\u001B[24m61\u001B[39m\u001B[31m6\u001B[39m\u001B[31m.\u001B[39m  \n",
        "\u001B[38;5;250m2\u001B[39m X               2.18     0.165      13.2 0.000\u001B[4m0\u001B[24m\u001B[4m0\u001B[24m\u001B[4m0\u001B[24m016\u001B[4m1\u001B[24m     1.82      2.54\n",
        "> ",
        "predict(object = model.1, newdata = df)",
        "       1        2        3        4        5        6        7        8        9       10       11       12       13       14       15       16       17 \n39.25714 41.43736 43.61758 45.79780 47.97802 50.15824 52.33846 54.51868 56.69890 58.87912 61.05934 63.23956 65.41978 67.60000 69.78022 71.96044 74.14066 \n",
        "> ",
        "prediction_au <- predict(object = model.1, newdata = subset(df, X >= 2022))",
        "> ",
        "nl_waar <- c(56, 63, 67, 69, 65, 69, 71, 71, 74, 79, 80, 81, 87, 89)",
        "> ",
        "nl_geschat <- c(58, 61, 63, 65, 67, 70, 72, 74, 76, 78, 80, 83, 85, 87)",
        "> ",
        "",
        "> ",
        "cor(nl_geschat, nl_waar)",
        "[1] 0.9679677\n",
        "> ",
        "",
        "> ",
        "au_waar <- c(37, 41, 42, 44, 48, 54, 53, 58, 58, 62, 60, 62, 66, 63)",
        "> ",
        "au_geschat <- c(39, 41, 44, 46, 48, 50, 52, 55, 57, 59, 61, 63, 65, 67)",
        "> ",
        "",
        "> ",
        "cor(au_geschat, au_waar)",
        "[1] 0.9706723\n",
        "> ",
        "View(df)",
        "> ",
        "library(here)",
        "here() starts at /Users/gerrit/Documents/NOVI/Wire Solutions/R\n",
        "> ",
        "library(tidyverse)",
        "\u001B[37m── \u001B[1mAttaching packages\u001B[22m ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── tidyverse 1.3.1 ──\u001B[39m\n",
        "\u001B[37m\u001B[32m✓\u001B[37m \u001B[34mtibble \u001B[37m 3.1.6     \u001B[32m✓\u001B[37m \u001B[34mdplyr  \u001B[37m 1.0.8\n\u001B[32m✓\u001B[37m \u001B[34mtidyr  \u001B[37m 1.2.0     \u001B[32m✓\u001B[37m \u001B[34mstringr\u001B[37m 1.4.0\n\u001B[32m✓\u001B[37m \u001B[34mreadr  \u001B[37m 2.1.2     \u001B[32m✓\u001B[37m \u001B[34mforcats\u001B[37m 0.5.1\n\u001B[32m✓\u001B[37m \u001B[34mpurrr  \u001B[37m 0.3.4     \u001B[39m\n",
        "\u001B[37m── \u001B[1mConflicts\u001B[22m ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── tidyverse_conflicts() ──\n\u001B[31mx\u001B[37m \u001B[34mdplyr\u001B[37m::\u001B[32mfilter()\u001B[37m masks \u001B[34mstats\u001B[37m::filter()\n\u001B[31mx\u001B[37m \u001B[34mdplyr\u001B[37m::\u001B[32mlag()\u001B[37m    masks \u001B[34mstats\u001B[37m::lag()\u001B[39m\n",
        "> ",
        "library(lubridate)",
        "\nAttaching package: ‘lubridate’\n\n",
        "The following objects are masked from ‘package:base’:\n\n    date, intersect, setdiff, union\n\n",
        "> ",
        "library(skimr)",
        "> ",
        "library(janitor)",
        "\nAttaching package: ‘janitor’\n\n",
        "The following objects are masked from ‘package:stats’:\n\n    chisq.test, fisher.test\n\n",
        "> ",
        "library(broom)",
        "> ",
        "",
        "> ",
        "# Laden van dataset ----",
        "> ",
        "",
        "> ",
        "setwd(\"CSV\")",
        "> ",
        "",
        "> ",
        "# Originele dataset",
        "> ",
        "online_retail <- read_csv2(\"internet_purchases_by_individuals.csv\")",
        "\u001B[36mℹ\u001B[39m Using \u001B[34m\u001B[34m\"','\"\u001B[34m\u001B[39m as decimal and \u001B[34m\u001B[34m\"'.'\"\u001B[34m\u001B[39m as grouping mark. Use `read_delim()` for more control.\n\r\u001B[1mindexed\u001B[0m \u001B[32m3.00B\u001B[0m in \u001B[36m 0s\u001B[0m, \u001B[32m381.30kB/s\u001B[0m\r                                                                                                                                                                                               \r\u001B[1mindexed\u001B[0m \u001B[32m1.00TB\u001B[0m in \u001B[36m 0s\u001B[0m, \u001B[32m4.93PB/s\u001B[0m\r                                                                                                                                                                                               ",
        "\r\u001B[1mRows: \u001B[22m\u001B[34m180\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m3\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \";\"\n\u001B[31mchr\u001B[39m (2): country, individuals_purchasing_online_in_percentage\n\u001B[32mdbl\u001B[39m (1): year\n",
        "\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "> ",
        "View(online_retail)",
        "> ",
        "online_retail <- read_csv2(\"internet_purchases_by_individuals.csv\")",
        "\u001B[36mℹ\u001B[39m Using \u001B[34m\u001B[34m\"','\"\u001B[34m\u001B[39m as decimal and \u001B[34m\u001B[34m\"'.'\"\u001B[34m\u001B[39m as grouping mark. Use `read_delim()` for more control.\n\r\u001B[1mindexed\u001B[0m \u001B[32m3.00B\u001B[0m in \u001B[36m 0s\u001B[0m, \u001B[32m599.19kB/s\u001B[0m\r                                                                                                                                                                                               \r\u001B[1mindexed\u001B[0m \u001B[32m1.00TB\u001B[0m in \u001B[36m 0s\u001B[0m, \u001B[32m3.22PB/s\u001B[0m\r                                                                                                                                                                                               ",
        "\r\u001B[1mRows: \u001B[22m\u001B[34m612\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m3\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \";\"\n\u001B[31mchr\u001B[39m (2): country, individuals_purchasing_online_in_percentage\n\u001B[32mdbl\u001B[39m (1): year\n",
        "\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "> ",
        "View(online_retail)",
        "> ",
        "head(online_retail)",
        "\u001B[38;5;246m# A tibble: 6 × 3\u001B[39m\n  country  year individuals_purchasing_online_in_percentage\n  \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m   \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m                                      \n\u001B[38;5;250m1\u001B[39m Albania  \u001B[4m2\u001B[24m008 :                                          \n\u001B[38;5;250m2\u001B[39m Albania  \u001B[4m2\u001B[24m009 :                                          \n\u001B[38;5;250m3\u001B[39m Albania  \u001B[4m2\u001B[24m010 :                                          \n\u001B[38;5;250m4\u001B[39m Albania  \u001B[4m2\u001B[24m011 :                                          \n",
        "\u001B[38;5;250m5\u001B[39m Albania  \u001B[4m2\u001B[24m012 :                                          \n\u001B[38;5;250m6\u001B[39m Albania  \u001B[4m2\u001B[24m013 :                                          \n",
        "> ",
        "online_retail <- read_csv2(\"internet_purchases_by_individuals.csv\")",
        "\u001B[36mℹ\u001B[39m Using \u001B[34m\u001B[34m\"','\"\u001B[34m\u001B[39m as decimal and \u001B[34m\u001B[34m\"'.'\"\u001B[34m\u001B[39m as grouping mark. Use `read_delim()` for more control.\n\r\u001B[1mindexed\u001B[0m \u001B[32m3.00B\u001B[0m in \u001B[36m 0s\u001B[0m, \u001B[32m419.43kB/s\u001B[0m\r                                                                                                                                                                                               \r\u001B[1mindexed\u001B[0m \u001B[32m1.00TB\u001B[0m in \u001B[36m 0s\u001B[0m, \u001B[32m2.74PB/s\u001B[0m\r                                                                                                                                                                                               ",
        "\r\u001B[1mRows: \u001B[22m\u001B[34m612\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m3\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \";\"\n\u001B[31mchr\u001B[39m (2): country, individuals_purchasing_online_in_percentage\n\u001B[32mdbl\u001B[39m (1): year\n",
        "\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "> ",
        "View(online_retail)",
        "> ",
        "online_purchases_by_individuals <- read_csv2(\"internet_purchases_by_individuals.csv\")",
        "\u001B[36mℹ\u001B[39m Using \u001B[34m\u001B[34m\"','\"\u001B[34m\u001B[39m as decimal and \u001B[34m\u001B[34m\"'.'\"\u001B[34m\u001B[39m as grouping mark. Use `read_delim()` for more control.\n\r\u001B[1mindexed\u001B[0m \u001B[32m3.00B\u001B[0m in \u001B[36m 0s\u001B[0m, \u001B[32m483.96kB/s\u001B[0m\r                                                                                                                                                                                               \r\u001B[1mindexed\u001B[0m \u001B[32m1.00TB\u001B[0m in \u001B[36m 0s\u001B[0m, \u001B[32m2.83PB/s\u001B[0m\r                                                                                                                                                                                               ",
        "\r\u001B[1mRows: \u001B[22m\u001B[34m582\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m3\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \";\"\n\u001B[31mchr\u001B[39m (2): country, individuals_purchasing_online_in_percentage\n\u001B[32mdbl\u001B[39m (1): year\n",
        "\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "> ",
        "View(online_purchases_by_individuals)",
        "> ",
        "head(online_purchases_by_individuals)",
        "\u001B[38;5;246m# A tibble: 6 × 3\u001B[39m\n  country  year individuals_purchasing_online_in_percentage\n  \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m   \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m                                      \n\u001B[38;5;250m1\u001B[39m Austria  \u001B[4m2\u001B[24m008 37                                         \n\u001B[38;5;250m2\u001B[39m Austria  \u001B[4m2\u001B[24m009 41                                         \n\u001B[38;5;250m3\u001B[39m Austria  \u001B[4m2\u001B[24m010 42                                         \n\u001B[38;5;250m4\u001B[39m Austria  \u001B[4m2\u001B[24m011 44                                         \n",
        "\u001B[38;5;250m5\u001B[39m Austria  \u001B[4m2\u001B[24m012 48                                         \n\u001B[38;5;250m6\u001B[39m Austria  \u001B[4m2\u001B[24m013 54                                         \n",
        "> ",
        "online_purchases_by_individuals <- read_csv2(\"internet_purchases_by_individuals.csv\")",
        "\u001B[36mℹ\u001B[39m Using \u001B[34m\u001B[34m\"','\"\u001B[34m\u001B[39m as decimal and \u001B[34m\u001B[34m\"'.'\"\u001B[34m\u001B[39m as grouping mark. Use `read_delim()` for more control.\n\r\u001B[1mindexed\u001B[0m \u001B[32m3.00B\u001B[0m in \u001B[36m 0s\u001B[0m, \u001B[32m503.32kB/s\u001B[0m\r                                                                                                                                                                                               \r\u001B[1mindexed\u001B[0m \u001B[32m1.00TB\u001B[0m in \u001B[36m 0s\u001B[0m, \u001B[32m3.16PB/s\u001B[0m\r                                                                                                                                                                                               ",
        "\r\u001B[1mRows: \u001B[22m\u001B[34m582\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m3\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \";\"\n\u001B[31mchr\u001B[39m (2): country, individuals_purchasing_online_in_percentage\n\u001B[32mdbl\u001B[39m (1): year\n",
        "\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "> ",
        "View(online_purchases_by_individuals)",
        "> ",
        "online_purchases_by_individuals <- read_csv2(\"internet_purchases_by_individuals.csv\")",
        "\u001B[36mℹ\u001B[39m Using \u001B[34m\u001B[34m\"','\"\u001B[34m\u001B[39m as decimal and \u001B[34m\u001B[34m\"'.'\"\u001B[34m\u001B[39m as grouping mark. Use `read_delim()` for more control.\n\r\u001B[1mindexed\u001B[0m \u001B[32m3.00B\u001B[0m in \u001B[36m 0s\u001B[0m, \u001B[32m503.32kB/s\u001B[0m\r                                                                                                                                                                                               \r\u001B[1mindexed\u001B[0m \u001B[32m1.00TB\u001B[0m in \u001B[36m 0s\u001B[0m, \u001B[32m3.12PB/s\u001B[0m\r                                                                                                                                                                                               ",
        "\r\u001B[1mRows: \u001B[22m\u001B[34m582\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m3\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \";\"\n\u001B[31mchr\u001B[39m (2): country, individuals_purchasing_online_in_percentage\n\u001B[32mdbl\u001B[39m (1): year\n",
        "\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "> ",
        "head(online_purchases_by_individuals)",
        "\u001B[38;5;246m# A tibble: 6 × 3\u001B[39m\n  country  year individuals_purchasing_online_in_percentage\n  \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m   \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m                                      \n\u001B[38;5;250m1\u001B[39m Austria  \u001B[4m2\u001B[24m008 37                                         \n\u001B[38;5;250m2\u001B[39m Austria  \u001B[4m2\u001B[24m009 41                                         \n\u001B[38;5;250m3\u001B[39m Austria  \u001B[4m2\u001B[24m010 42                                         \n\u001B[38;5;250m4\u001B[39m Austria  \u001B[4m2\u001B[24m011 44                                         \n",
        "\u001B[38;5;250m5\u001B[39m Austria  \u001B[4m2\u001B[24m012 48                                         \n\u001B[38;5;250m6\u001B[39m Austria  \u001B[4m2\u001B[24m013 54                                         \n",
        "> ",
        "View(online_purchases_by_individuals)",
        "> ",
        "online_purchases_by_individuals_2 <-  online_purchases_by_individuals %>% ",
        "+ ",
        "  as.numeric(individuals_purchasing_online_in_percentage)",
        "Error in online_purchases_by_individuals %>% as.numeric(individuals_purchasing_online_in_percentage) : \n  object 'individuals_purchasing_online_in_percentage' not found\n",
        "> ",
        "online_purchases_by_individuals_2 <-  online_purchases_by_individuals %>% ",
        "+ ",
        "  as.numeric(as.character(individuals_purchasing_online_in_percentage))",
        "Error in online_purchases_by_individuals %>% as.numeric(as.character(individuals_purchasing_online_in_percentage)) : \n  object 'individuals_purchasing_online_in_percentage' not found\n",
        "> ",
        "online_purchases_by_individuals_2 <-  online_purchases_by_individuals %>% ",
        "+ ",
        "  as.numeric(as.character(online_purchases_by_individuals$individuals_purchasing_online_in_percentage))",
        "Error in online_purchases_by_individuals %>% as.numeric(as.character(online_purchases_by_individuals$individuals_purchasing_online_in_percentage)) : \n  'list' object cannot be coerced to type 'double'\n",
        "> ",
        "online_purchases_by_individuals$individuals_purchasing_online_in_percentage <- as.numeric(as.character(online_purchases_by_individuals$individuals_purchasing_online_in_percentage))",
        "Warning message:\n",
        "NAs introduced by coercion \n",
        "> ",
        "head(online_purchases_by_individuals)",
        "\u001B[38;5;246m# A tibble: 6 × 3\u001B[39m\n  country  year individuals_purchasing_online_in_percentage\n  \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m   \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m                                       \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m\n\u001B[38;5;250m1\u001B[39m Austria  \u001B[4m2\u001B[24m008                                          37\n\u001B[38;5;250m2\u001B[39m Austria  \u001B[4m2\u001B[24m009                                          41\n\u001B[38;5;250m3\u001B[39m Austria  \u001B[4m2\u001B[24m010                                          42\n\u001B[38;5;250m4\u001B[39m Austria  \u001B[4m2\u001B[24m011                                          44\n",
        "\u001B[38;5;250m5\u001B[39m Austria  \u001B[4m2\u001B[24m012                                          48\n\u001B[38;5;250m6\u001B[39m Austria  \u001B[4m2\u001B[24m013                                          54\n",
        "> ",
        "source(\"~/.active-rstudio-document\")",
        "Error in install.packages : Updating loaded packages\nError in install.packages : Updating loaded packages\n",
        "> ",
        "online_purchases_by_individuals <- read_csv2(\"internet_purchases_by_individuals.csv\")",
        "\u001B[36mℹ\u001B[39m Using \u001B[34m\u001B[34m\"','\"\u001B[34m\u001B[39m as decimal and \u001B[34m\u001B[34m\"'.'\"\u001B[34m\u001B[39m as grouping mark. Use `read_delim()` for more control.\n\r\u001B[1mindexed\u001B[0m \u001B[32m3.00B\u001B[0m in \u001B[36m 0s\u001B[0m, \u001B[32m419.43kB/s\u001B[0m\r                                                                                                                                                                                               \r\u001B[1mindexed\u001B[0m \u001B[32m1.00TB\u001B[0m in \u001B[36m 0s\u001B[0m, \u001B[32m3.10PB/s\u001B[0m\r                                                                                                                                                                                               ",
        "\r\u001B[1mRows: \u001B[22m\u001B[34m582\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m3\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \";\"\n\u001B[31mchr\u001B[39m (2): country, individuals_purchasing_online_in_percentage\n\u001B[32mdbl\u001B[39m (1): year\n",
        "\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "> ",
        "",
        "> ",
        "# Omzetten percentage naar numeric value",
        "> ",
        "online_purchases_by_individuals$individuals_purchasing_online_in_percentage <- as.numeric(as.character(online_purchases_by_individuals$individuals_purchasing_online_in_percentage))",
        "Warning message:\n",
        "NAs introduced by coercion \n",
        "> ",
        "View(online_purchases_by_individuals)",
        "> ",
        "na.omit(online_purchases_by_individuals)",
        "\u001B[38;5;246m# A tibble: 449 × 3\u001B[39m\n   country  year individuals_purchasing_online_in_percentage\n   \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m   \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m                                       \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m\n\u001B[38;5;250m 1\u001B[39m Austria  \u001B[4m2\u001B[24m008                                          37\n\u001B[38;5;250m 2\u001B[39m Austria  \u001B[4m2\u001B[24m009                                          41\n\u001B[38;5;250m 3\u001B[39m Austria  \u001B[4m2\u001B[24m010                                          42\n\u001B[38;5;250m 4\u001B[39m Austria  \u001B[4m2\u001B[24m011                                          44\n",
        "\u001B[38;5;250m 5\u001B[39m Austria  \u001B[4m2\u001B[24m012                                          48\n\u001B[38;5;250m 6\u001B[39m Austria  \u001B[4m2\u001B[24m013                                          54\n\u001B[38;5;250m 7\u001B[39m Austria  \u001B[4m2\u001B[24m014                                          53\n\u001B[38;5;250m 8\u001B[39m Austria  \u001B[4m2\u001B[24m015                                          58\n\u001B[38;5;250m 9\u001B[39m Austria  \u001B[4m2\u001B[24m016                                          58\n\u001B[38;5;250m10\u001B[39m Austria  \u001B[4m2\u001B[24m017                                          62\n",
        "\u001B[38;5;246m# … with 439 more rows\u001B[39m\n",
        "> ",
        "View(online_purchases_by_individuals)",
        "> ",
        "online_purchases_by_individuals <- na.omit(online_purchases_by_individuals)",
        "> ",
        "View(online_purchases_by_individuals)",
        "> ",
        "model.1 <- lm(formula = individuals_purchasing_online_in_percentage ~ year, data = online_purchases_by_individuals)",
        "> ",
        "View(model.1)",
        "> ",
        "summary(model.1)",
        "\nCall:\nlm(formula = individuals_purchasing_online_in_percentage ~ year, \n    data = online_purchases_by_individuals)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-38.275 -16.875  -1.275  18.125  39.676 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -5695.4060   482.6956  -11.80   <2e-16 ***\nyear            2.8500     0.2396   11.89   <2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 20.53 on",
        " 447 degrees of freedom\nMultiple R-squared:  0.2404,\tAdjusted R-squared:  0.2387 \nF-statistic: 141.5 on 1 and 447 DF,  p-value: < 2.2e-16\n\n",
        "> ",
        "View(online_purchases_by_individuals)",
        "> ",
        "austria <- online_purchases_by_individuals %>% ",
        "+ ",
        "  filter(austria)",
        "\u001B[1m\u001B[33mError\u001B[39m in \u001B[38;5;250m`filter()`\u001B[39m:\u001B[22m\n\u001B[38;5;250m\u001B[33m!\u001B[38;5;250m Problem while computing `..1 = austria`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[33m!\u001B[39m object 'austria' not found\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n",
        "> ",
        "austria <- online_purchases_by_individuals %>% ",
        "+ ",
        "  filter(country = \"austria\")",
        "\u001B[1m\u001B[33mError\u001B[39m in \u001B[38;5;250m`filter()`\u001B[39m:\u001B[22m\n\u001B[38;5;250m\u001B[33m!\u001B[38;5;250m We detected a named input.\n\u001B[36mℹ\u001B[38;5;250m This usually means that you've used `=` instead of `==`.\n\u001B[36mℹ\u001B[38;5;250m Did you mean `country == \"austria\"`?\u001B[39m\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n",
        "> ",
        "austria <- online_purchases_by_individuals %>% ",
        "+ ",
        "  filter(country == \"austria\")",
        "> ",
        "View(austria)",
        "> ",
        "austria <- online_purchases_by_individuals %>% ",
        "+ ",
        "  filter(\"austria\")",
        "\u001B[1m\u001B[33mError\u001B[39m in \u001B[38;5;250m`filter()`\u001B[39m:\u001B[22m\n\u001B[38;5;250m\u001B[33m!\u001B[38;5;250m Problem while computing `..1 = \"austria\"`.\n\u001B[31mx\u001B[38;5;250m Input `..1` must be a logical vector, not a character.\u001B[39m\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n",
        "> ",
        "austria <- online_purchases_by_individuals %>% ",
        "+ ",
        "  filter(country == \"Austria\")",
        "> ",
        "View(austria)",
        "> ",
        "df <- data.frame(",
        "+ ",
        "  X = (2008:2024),",
        "+ ",
        "  Y = austria$individuals_purchasing_online_in_percentage, rep(NA, 3))",
        "Error in data.frame(X = (2008:2024), Y = austria$individuals_purchasing_online_in_percentage,  : \n  arguments imply differing number of rows: 17, 14, 3\n",
        "> ",
        ")",
        "Error: unexpected ')' in \")\"\n",
        "> ",
        "df <- data.frame(",
        "+ ",
        "  X = (2008:2024),",
        "+ ",
        "  Y = (austria$individuals_purchasing_online_in_percentage, rep(NA, 3))",
        "Error: unexpected ',' in:\n\"  X = (2008:2024),\n  Y = (austria$individuals_purchasing_online_in_percentage,\"\n",
        "> ",
        ")",
        "Error: unexpected ')' in \")\"\n",
        "> ",
        "df <- data.frame(",
        "+ ",
        "  X = (2008:2024),",
        "+ ",
        "  Y = c(56, 63, 67, 69, 65, 69, 71, 71, 74, 79, 80, 81, 87, 89, rep(NA, 3))",
        "+ ",
        ")",
        "> ",
        "df <- data.frame(",
        "+ ",
        "  X = (2008:2024),",
        "+ ",
        "  Y = c(austria$individuals_purchasing_online_in_percentage, rep(NA, 3))",
        "+ ",
        ")",
        "> ",
        "View(df)",
        "> ",
        "model.1 <- lm(formula = Y ~ X, data = df)",
        "> ",
        "broom::tidy(model.1, conf.int = T)",
        "\u001B[38;5;246m# A tibble: 2 × 7\u001B[39m\n  term        estimate std.error statistic      p.value conf.low conf.high\n  \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m          \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m        \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m    \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m\n\u001B[38;5;250m1\u001B[39m (Intercept) -\u001B[31m\u001B[4m4\u001B[24m33\u001B[39m\u001B[31m9\u001B[39m\u001B[31m.\u001B[39m     332.        -\u001B[31m13\u001B[39m\u001B[31m.\u001B[39m\u001B[31m1\u001B[39m 0.000\u001B[4m0\u001B[24m\u001B[4m0\u001B[24m\u001B[4m0\u001B[24m018\u001B[4m4\u001B[24m -\u001B[31m\u001B[4m5\u001B[24m06\u001B[39m\u001B[31m1\u001B[39m\u001B[31m.\u001B[39m    -\u001B[31m\u001B[4m3\u001B[24m61\u001B[39m\u001B[31m6\u001B[39m\u001B[31m.\u001B[39m  \n",
        "\u001B[38;5;250m2\u001B[39m X               2.18     0.165      13.2 0.000\u001B[4m0\u001B[24m\u001B[4m0\u001B[24m\u001B[4m0\u001B[24m016\u001B[4m1\u001B[24m     1.82      2.54\n",
        "> ",
        "predict(object = model.1, newdata = df)",
        "       1        2        3        4        5        6        7        8        9       10       11       12       13       14       15       16       17 \n39.25714 41.43736 43.61758 45.79780 47.97802 50.15824 52.33846 54.51868 56.69890 58.87912 61.05934 63.23956 65.41978 67.60000 69.78022 71.96044 74.14066 \n",
        "> ",
        "predict(object = model.1, newdata = df) %>% ",
        "+ ",
        "  mutate_if(is.numeric, ~round(., 2)) ",
        "Error in UseMethod(\"tbl_vars\") : \n  no applicable method for 'tbl_vars' applied to an object of class \"c('double', 'numeric')\"\n",
        "> ",
        "austria_predict <- predict(object = model.1, newdata = df)",
        "> ",
        "austria_2 <- austria",
        "> ",
        "austria_2 <- austria %>% ",
        "+ ",
        "  cbind(austria, new_col = austria_predict)",
        "Error in data.frame(..., check.names = FALSE) : \n  arguments imply differing number of rows: 14, 17\n",
        "> ",
        "View(df)",
        "> ",
        "View(df)",
        "> ",
        "austria_2 <- df %>% ",
        "+ ",
        "  cbind(df, new_col = austria_predict)",
        "> ",
        "View(austria_2)",
        "> ",
        "austria_2 <- df %>% ",
        "+ ",
        "  cbind(df, new_col = austria_predict)",
        "> ",
        "View(austria_2)",
        "> ",
        "austria_2 <- df %>% ",
        "+ ",
        "  cbind(new_col = austria_predict)",
        "> ",
        "View(austria_2)",
        "> ",
        "austria_2 <- df %>% ",
        "+ ",
        "  cbind(new_col = austria_predict) %>% ",
        "+ ",
        "  mutate_if(is.numeric, ~round(., 2)) ",
        "> ",
        "View(austria_2)",
        "> ",
        "austria_2 <- df %>% ",
        "+ ",
        "  cbind(new_col = austria_predict) %>% ",
        "+ ",
        "  mutate_if(is.numeric, ~round(., 0)) ",
        "> ",
        "View(austria_2)",
        "> ",
        "c(\"Austria\")",
        "[1] \"Austria\"\n",
        "> ",
        "online_purchases_by_individuals <- read_csv2(\"internet_purchases_by_individuals.csv\")",
        "\u001B[36mℹ\u001B[39m Using \u001B[34m\u001B[34m\"','\"\u001B[34m\u001B[39m as decimal and \u001B[34m\u001B[34m\"'.'\"\u001B[34m\u001B[39m as grouping mark. Use `read_delim()` for more control.\n\r\u001B[1mindexed\u001B[0m \u001B[32m3.00B\u001B[0m in \u001B[36m 0s\u001B[0m, \u001B[32m503.32kB/s\u001B[0m\r                                                                                                                                                                                               \r\u001B[1mindexed\u001B[0m \u001B[32m1.00TB\u001B[0m in \u001B[36m 0s\u001B[0m, \u001B[32m3.57PB/s\u001B[0m\r                                                                                                                                                                                               ",
        "\r\u001B[1mRows: \u001B[22m\u001B[34m582\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m3\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \";\"\n\u001B[31mchr\u001B[39m (2): country, individuals_purchasing_online_in_percentage\n\u001B[32mdbl\u001B[39m (1): year\n",
        "\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "> ",
        "",
        "> ",
        "# Omzetten percentage naar numeric value en weghalen gecreeerde NA values",
        "> ",
        "online_purchases_by_individuals$individuals_purchasing_online_in_percentage <- as.numeric(as.character(online_purchases_by_individuals$individuals_purchasing_online_in_percentage))",
        "Warning message:\n",
        "NAs introduced by coercion \n",
        "> ",
        "online_purchases_by_individuals <- na.omit(online_purchases_by_individuals)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "# Analyseren van de data ----",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "selected_country <- online_purchases_by_individuals %>% ",
        "+ ",
        "  filter(country == \"Austria\")",
        "> ",
        "df <- data.frame(",
        "+ ",
        "  X = (2008:2024),",
        "+ ",
        "  Y = c(selected_country$individuals_purchasing_online_in_percentage, rep(NA, 3))",
        "+ ",
        ")",
        "> ",
        "model.1 <- lm(formula = Y ~ X, data = df)",
        "> ",
        "broom::tidy(model.1, conf.int = T)",
        "\u001B[38;5;246m# A tibble: 2 × 7\u001B[39m\n  term        estimate std.error statistic      p.value conf.low conf.high\n  \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m          \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m        \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m    \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m\n\u001B[38;5;250m1\u001B[39m (Intercept) -\u001B[31m\u001B[4m4\u001B[24m33\u001B[39m\u001B[31m9\u001B[39m\u001B[31m.\u001B[39m     332.        -\u001B[31m13\u001B[39m\u001B[31m.\u001B[39m\u001B[31m1\u001B[39m 0.000\u001B[4m0\u001B[24m\u001B[4m0\u001B[24m\u001B[4m0\u001B[24m018\u001B[4m4\u001B[24m -\u001B[31m\u001B[4m5\u001B[24m06\u001B[39m\u001B[31m1\u001B[39m\u001B[31m.\u001B[39m    -\u001B[31m\u001B[4m3\u001B[24m61\u001B[39m\u001B[31m6\u001B[39m\u001B[31m.\u001B[39m  \n",
        "\u001B[38;5;250m2\u001B[39m X               2.18     0.165      13.2 0.000\u001B[4m0\u001B[24m\u001B[4m0\u001B[24m\u001B[4m0\u001B[24m016\u001B[4m1\u001B[24m     1.82      2.54\n",
        "> ",
        "predict <- predict(object = model.1, newdata = df)",
        "> ",
        "complete <- df %>% ",
        "+ ",
        "  cbind(new_col = austria_predict) %>% ",
        "+ ",
        "  mutate_if(is.numeric, ~round(., 0)) ",
        "Error in data.frame(..., check.names = FALSE) : \n  object 'austria_predict' not found\n",
        "> ",
        "complete <- df %>% ",
        "+ ",
        "  cbind(new_col = predict) %>% ",
        "+ ",
        "  mutate_if(is.numeric, ~round(., 0)) ",
        "> ",
        "View(complete)",
        "> ",
        "View(complete)",
        "> ",
        "View(complete)",
        "> ",
        "complete$new_col",
        " [1] 39 41 44 46 48 50 52 55 57 59 61 63 65 68 70 72 74\n",
        "> ",
        "View(complete)",
        "> ",
        "complete <- df %>% ",
        "+ ",
        "  cbind(new_col = predict) %>% ",
        "+ ",
        "  df.insert(0, \"country\", \"Austria\")",
        "Error in df.insert(., 0, \"country\", \"Austria\") : \n  could not find function \"df.insert\"\n",
        "> ",
        "  mutate_if(is.numeric, ~round(., 0)) ",
        "Error in UseMethod(\"tbl_vars\") : \n  no applicable method for 'tbl_vars' applied to an object of class \"function\"\n",
        "> ",
        "View(complete)",
        "> ",
        "complete.insert(0, \"Country\", \"Austria\")",
        "Error in complete.insert(0, \"Country\", \"Austria\") : \n  could not find function \"complete.insert\"\n",
        "> ",
        "complete[\"country\"] = \"Austria\"",
        "> ",
        "View(complete)",
        "> ",
        "complete[0, \"country\"] = \"Austria\"",
        "> ",
        "View(complete)",
        "> ",
        "# Installeren van packages en libraries ----",
        "> ",
        "",
        "> ",
        "# Packages",
        "> ",
        "install.packages(\"tidyverse\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"here\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"skimr\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"janitor\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"broom\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "",
        "> ",
        "# Libraries",
        "> ",
        "library(here)",
        "> ",
        "library(tidyverse)",
        "> ",
        "library(lubridate)",
        "> ",
        "library(skimr)",
        "> ",
        "library(janitor)",
        "> ",
        "library(broom)",
        "> ",
        "",
        "> ",
        "# Laden van dataset ----",
        "> ",
        "",
        "> ",
        "setwd(\"CSV\")",
        "Error in setwd(\"CSV\") : cannot change working directory\n",
        "> ",
        "",
        "> ",
        "# Originele dataset",
        "> ",
        "online_purchases_by_individuals <- read_csv2(\"internet_purchases_by_individuals.csv\")",
        "\u001B[36mℹ\u001B[39m Using \u001B[34m\u001B[34m\"','\"\u001B[34m\u001B[39m as decimal and \u001B[34m\u001B[34m\"'.'\"\u001B[34m\u001B[39m as grouping mark. Use `read_delim()` for more control.\n\r\u001B[1mindexed\u001B[0m \u001B[32m3.00B\u001B[0m in \u001B[36m 0s\u001B[0m, \u001B[32m740.17kB/s\u001B[0m\r                                                                                                                                                                                               \r\u001B[1mindexed\u001B[0m \u001B[32m1.00TB\u001B[0m in \u001B[36m 0s\u001B[0m, \u001B[32m1.61PB/s\u001B[0m\r                                                                                                                                                                                               ",
        "\r\u001B[1mRows: \u001B[22m\u001B[34m582\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m3\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \";\"\n\u001B[31mchr\u001B[39m (2): country, individuals_purchasing_online_in_percentage\n\u001B[32mdbl\u001B[39m (1): year\n",
        "\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "> ",
        "",
        "> ",
        "# Omzetten percentage naar numeric value en weghalen gecreeerde NA values",
        "> ",
        "online_purchases_by_individuals$individuals_purchasing_online_in_percentage <- as.numeric(as.character(online_purchases_by_individuals$individuals_purchasing_online_in_percentage))",
        "Warning message:\n",
        "NAs introduced by coercion \n",
        "> ",
        "online_purchases_by_individuals <- na.omit(online_purchases_by_individuals)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "# Analyseren van de data ----",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "selected_country <- online_purchases_by_individuals %>% ",
        "+ ",
        "  filter(country == \"Austria\")",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "# Creeren van prognose",
        "> ",
        "",
        "> ",
        "# create a data frame to store your variables",
        "> ",
        "df <- data.frame(",
        "+ ",
        "  X = (2008:2024),",
        "+ ",
        "  Y = c(selected_country$individuals_purchasing_online_in_percentage, rep(NA, 3))",
        "+ ",
        ")",
        "> ",
        "",
        "> ",
        "# The lm function in R will exclude the observations with NA values while fitting the model",
        "> ",
        "model.1 <- lm(formula = Y ~ X, data = df)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "# tidy your model and include 95% confidence intervals",
        "> ",
        "broom::tidy(model.1, conf.int = T)",
        "\u001B[38;5;246m# A tibble: 2 × 7\u001B[39m\n  term        estimate std.error statistic      p.value conf.low conf.high\n  \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m          \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m        \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m    \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m\n\u001B[38;5;250m1\u001B[39m (Intercept) -\u001B[31m\u001B[4m4\u001B[24m33\u001B[39m\u001B[31m9\u001B[39m\u001B[31m.\u001B[39m     332.        -\u001B[31m13\u001B[39m\u001B[31m.\u001B[39m\u001B[31m1\u001B[39m 0.000\u001B[4m0\u001B[24m\u001B[4m0\u001B[24m\u001B[4m0\u001B[24m018\u001B[4m4\u001B[24m -\u001B[31m\u001B[4m5\u001B[24m06\u001B[39m\u001B[31m1\u001B[39m\u001B[31m.\u001B[39m    -\u001B[31m\u001B[4m3\u001B[24m61\u001B[39m\u001B[31m6\u001B[39m\u001B[31m.\u001B[39m  \n",
        "\u001B[38;5;250m2\u001B[39m X               2.18     0.165      13.2 0.000\u001B[4m0\u001B[24m\u001B[4m0\u001B[24m\u001B[4m0\u001B[24m016\u001B[4m1\u001B[24m     1.82      2.54\n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "# you can use the predict function as well for precise predictions",
        "> ",
        "# get predictions for every X value",
        "> ",
        "predict <- predict(object = model.1, newdata = df)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "complete <- df %>% ",
        "+ ",
        "  cbind(new_col = predict) %>% ",
        "+ ",
        "  mutate_if(is.numeric, ~round(., 0)) ",
        "> ",
        "",
        "> ",
        "complete[0, \"country\"] = \"Austria\"",
        "\nRestarting R session...\n\n"
    ]
}